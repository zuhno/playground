// 동일한 값을 가지는 원소들의 본래 순서가 유지된다 -> stable sort
// 기존 배열 이외의 추가적인 메모리를 거의 사용하지 않는다 -> in-place sort

// const data = [9, 3, 5, 7, 1];
const data = [434, 469, 846, 760, 978, 895, 818, 556, 798, 637, 929, 181, 46, 890, 766, 348, 797, 107, 680, 956, 887, 263, 539, 518, 260, 388, 503, 282, 186, 32, 77, 490, 480, 307, 19, 25, 759, 256, 433, 866, 661, 975, 174, 460, 465, 701, 573, 240, 967, 812, 362, 987, 843, 86, 677, 779, 826, 611, 964, 68, 670, 293, 212, 396, 822, 496, 217, 842, 216, 928, 799, 623, 280, 872, 550, 483, 18, 948, 736, 868, 371, 414, 368, 769, 367, 882, 917, 650, 643, 652, 91, 8, 814, 531, 93, 283, 883, 889, 724, 115];

const main = () => {
  for (let i = 0; i < data.length - 1; i++) {
    for (let j = 0; j < data.length - 1; j++) {
      if (data[j] <= data[j + 1]) continue;
      [data[j], data[j + 1]] = [data[j + 1], data[j]];
    }
  }
}

main();

console.log(data);
